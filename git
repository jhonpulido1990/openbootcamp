.
¿La terminal ideal para usar Git en Windows es?

Powershell
REPASAR CLASE
2.
¿Qué guarda Git?
Los archivos completos por cada versión de un proyecto.

REPASAR CLASE
3.
¿Qué es un branch o una rama en Git?
Un repositorio aparte del master donde puedes trabajar en paralelo.

4.
Con checkout puedo:

Ver todos los archivos de mi proyecto como los dejé en otras ramas.

5.
Un repositorio remoto y un repositorio local:

Tienen ramas similares dependiendo de cuáles haya enviado entre uno y otro.

6.
¿El HEAD en una rama es?

El apuntador al estado actual del repositorio basado en la rama en la que estoy trabajando.

7.
¿Cuándo debería hacer un merge?

Cuando quiero fusionar los cambios de una rama con otra.

8.
Cuando hay un conflicto entre archivos lo mejor es:

Analizar los conflictos tal como los reportó Git y elegir los cambios finales, luego commit.

9.
¿GitHub es?

Una red social de programadores.

REPASAR CLASE
10.
¿Las llaves públicas son?

Sistemas de cifrado básicos donde la misma llave puede cifrar y descifrar un mensaje.

REPASAR CLASE
11.
Para transmitir cambios seguros entre tu repositorio local y GitHub, ¿qué se recomienda?

Usar una llave SSH.

12.
¿Puedo crear ramas en GitHub que no tenga en mi repositorio local?

Sí, tú decides si traer esas ramas a tu repositorio local.
13.
En un repositorio público en GitHub, ¿qué puede hacer los colaboradores?

Solo hacer pull requests y con permiso del dueño hacer push/pull, crear ramas, etc.

REPASAR CLASE
14.
Para que dos personas trabajen en paralelo sobre el mismo archivo se recomienda:
Una rama independiente por cada persona y sus cambios que luego con verificación se hace merge a master.

15.
Un pull request es:

Una petición de traer a mi local el contenido de un repositorio remoto.

REPASAR CLASE
16.
El dueño de un repositorio al ver un pull request puede:

Editarlo, aceptarlo, darle merge, comentarlo para pedir cambios.

17.
Cuando hago un fork de un proyecto en GitHub, ¿lo que logro es?

Copiar un repositorio público a mis repositorios en GitHub, con todas sus ramas e historia anterior.

18.
Si ya hiciste el desafío de “Hazme un pull request,” ¿dentro de cuál etiqueta tenías que agregar el cambio?

<div id="footer"> 
REPASAR CLASE
19.
Si en el .gitignore agrego esto: images/*.js. ¿Cuál de los siguientes archivos sería ignorado?

images/jquery.js
20.
Cuando usas git stash, los cambios que “guardas” temporalmente se guardan en:

Repositorio local, en una rama nueva “stash”.

REPASAR CLASE
21.
¿Cuándo deberías usar cherry-pick?

Cuando quiero volver la rama a un punto del pasado y eso volverlo el HEAD.

REPASAR CLASE
22.
¿Con amend puedo?

Cambiar el staging de un archivo erróneo al archivo correcto.

REPASAR CLASE
23.
¿Qué puedes hacer con gitk?

Ver en una interfaz visual las ramas y el log de tu repositorio.

24.
Es mejor aprender a manejar Git con la terminal antes de hacerlo con herramientas visuales como Gitk porque:

Debemos aprender Git con sus comandos de la terminal para resolver problemas o conflictos más avanzados. Gitk funciona bien, pero no nos permite realizar operaciones tan complejas.

25.
¿Cómo llaman GitHub y GitLab a los "merges" (propuestas de cambios desde otra rama o repositorio)?
Pull Request

REPASAR CLASE
26.
¿Puedes conectar tu repositorio local con más de un repositorio remoto?
Verdadero
27.
Estás en la rama master y quieres mandar los últimos cambios que guardaste con git stash a la rama retomando-los-cambios (la rama no ha sido creada aún). ¿Cuál de las siguientes soluciones es incorrecta?

git stash branch retomando-los-cambios
REPASAR CLASE
28.
¿Cuál es la diferencia entre git rm y git reset HEAD?
git reset head saca los archivos del repositorio. git rm saca los archivos de Staging.
29.
¿Para qué sirve git grep?

El comando git grep no existe. Pero podemos usar grep o git log --grep.
REPASAR CLASE
30.
¿Para qué sirve GitHub Pages?
Es un servicio de GitHub que nos permite publicar nuestros repositorios en internet (por ejemplo, nombre.github.io o nombre.github.io/proyecto).
